// Note: most of this file was auto-generated by GitHub Copilot! :)

using Moq;
using TerevintoSoftware.StaticSiteGenerator.Services;

namespace TerevintoSoftware.StaticSiteGenerator.Tests.Services;

public class HtmlFormatterTests
{
    private readonly Mock<IUrlFormatter> _urlFormatterMock = new();

    [TestCase("<html><body><a href=\"https://localhost/\">link</a></body></html>", "<html><body><a href=\"https://localhost/\">link</a></body></html>")]
    public void FixRelativeLinks_WithoutValidLinks_ShouldReturnTheSameHtml(string inputHtml, string expectedOutputHtml)
    {
        var htmlFormatter = new HtmlFormatter(_urlFormatterMock.Object);
        
        var outputUrl = htmlFormatter.FixRelativeLinks(inputHtml, "en");
        Assert.That(outputUrl, Is.EqualTo(expectedOutputHtml));
    }
    
    [TestCase("<html><body><a href=\"/Index\">link</a></body></html>", "<html><body><a href=\"/en/index.html\">link</a></body></html>")]
    public void FixRelativeLinks_WithLocalLinks_ShouldReplaceTheLinks(string inputHtml, string expectedOutputHtml)
    {
        _urlFormatterMock.Setup(x => x.Format("/Index")).Returns("/index.html");

        var htmlFormatter = new HtmlFormatter(_urlFormatterMock.Object);

        var outputUrl = htmlFormatter.FixRelativeLinks(inputHtml, "en");
        Assert.That(outputUrl, Is.EqualTo(expectedOutputHtml));
    }
}